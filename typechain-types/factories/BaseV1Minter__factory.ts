/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { BaseV1Minter, BaseV1MinterInterface } from "../BaseV1Minter";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "__voter",
        type: "address",
      },
      {
        internalType: "address",
        name: "__ve",
        type: "address",
      },
      {
        internalType: "address",
        name: "__ve_dist",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "weekly",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "circulating_supply",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "circulating_emission",
        type: "uint256",
      },
    ],
    name: "Mint",
    type: "event",
  },
  {
    inputs: [],
    name: "_token",
    outputs: [
      {
        internalType: "contract underlying",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_ve",
    outputs: [
      {
        internalType: "contract ve",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_ve_dist",
    outputs: [
      {
        internalType: "contract ve_dist",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_voter",
    outputs: [
      {
        internalType: "contract voter",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "active_period",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "calculate_emission",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_minted",
        type: "uint256",
      },
    ],
    name: "calculate_growth",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "circulating_emission",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "circulating_supply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "claimants",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "max",
        type: "uint256",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "update_period",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "weekly",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "weekly_emission",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6101006040526a108b2a2c280290940000006000553480156200002157600080fd5b506040516200156238038062001562833981016040819052620000449162000141565b600280546001600160a01b0319163317905560408051637e062a3560e11b815290516001600160a01b0384169163fc0c546a9160048083019260209291908290030181865afa1580156200009c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000c291906200018b565b6001600160a01b0390811660805283811660a05282811660c052811660e05262093a8080620000f3816002620001c6565b620000ff9042620001e8565b6200010b919062000203565b620001179190620001c6565b6001555062000226915050565b80516001600160a01b03811681146200013c57600080fd5b919050565b6000806000606084860312156200015757600080fd5b620001628462000124565b9250620001726020850162000124565b9150620001826040850162000124565b90509250925092565b6000602082840312156200019e57600080fd5b620001a98262000124565b9392505050565b634e487b7160e01b600052601160045260246000fd5b6000816000190483118215151615620001e357620001e3620001b0565b500290565b60008219821115620001fe57620001fe620001b0565b500190565b6000826200022157634e487b7160e01b600052601260045260246000fd5b500490565b60805160a05160c05160e051611284620002de6000396000818161010d01528181610afc01528181610ba30152610c2301526000818161019d01528181610405015281816104d1015281816106c7015261078c01526000818161016101528181610d0e0152610dce0152600081816101f0015281816102460152818161035901528181610453015281816106370152818161081b0152818161097f01528181610a0b01528181610b2b0152610cdf01526112846000f3fe608060405234801561001057600080fd5b50600436106100df5760003560e01c80638dd598fb1161008c578063d139960811610066578063d1399608146101da578063e038c75a146101e3578063ecd0c0c3146101eb578063ed29fc111461021257600080fd5b80638dd598fb146101985780638e01fbfa146101bf578063cfc6c8ff146101d257600080fd5b806336d96faf116100bd57806336d96faf146101545780633db9b42a1461015c578063851708131461018357600080fd5b80631eebae80146100e457806326cfc17b146100ff5780632c6b2f0c14610108575b600080fd5b6100ec61021a565b6040519081526020015b60405180910390f35b6100ec60005481565b61012f7f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100f6565b6100ec610242565b61012f7f000000000000000000000000000000000000000000000000000000000000000081565b610196610191366004610fd7565b610300565b005b61012f7f000000000000000000000000000000000000000000000000000000000000000081565b6100ec6101cd3660046110bc565b610633565b6100ec61076e565b6100ec60015481565b6100ec610788565b61012f7f000000000000000000000000000000000000000000000000000000000000000081565b6100ec6108b2565b60006103e86002610229610788565b6102339190611104565b61023d9190611141565b905090565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156102af573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102d3919061117c565b60646102dd610788565b60626000546102ec9190611104565b6102f69190611104565b6102339190611141565b60025473ffffffffffffffffffffffffffffffffffffffff16331461032457600080fd5b6040517f40c10f19000000000000000000000000000000000000000000000000000000008152306004820152602481018290527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16906340c10f1990604401600060405180830381600087803b1580156103b257600080fd5b505af11580156103c6573d6000803e3d6000fd5b50506040517f095ea7b300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000811660048301527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60248301527f000000000000000000000000000000000000000000000000000000000000000016925063095ea7b391506044016020604051808303816000875af115801561049e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104c29190611195565b5060005b83518110156105df577f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663d4e54c3b84838151811061051d5761051d6111b7565b602002602001015163077f880087858151811061053c5761053c6111b7565b60200260200101516040518463ffffffff1660e01b815260040161058993929190928352602083019190915273ffffffffffffffffffffffffffffffffffffffff16604082015260600190565b6020604051808303816000875af11580156105a8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105cc919061117c565b50806105d7816111e6565b9150506104c6565b50600280547fffffffffffffffffffffffff000000000000000000000000000000000000000016905562093a8080610617814261121f565b6106219190611141565b61062b9190611104565b600155505050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156106a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106c4919061117c565b827f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610730573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610754919061117c565b61075e9190611104565b6107689190611141565b92915050565b600061023d61077b610242565b61078361021a565b610eb1565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156107f5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610819919061117c565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610884573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108a8919061117c565b61023d9190611237565b6001546000906108c562093a808261121f565b42101580156108ea575060025473ffffffffffffffffffffffffffffffffffffffff16155b15610eac5762093a806108fd8142611141565b6109079190611104565b6001819055905061091661076e565b60008181559061092590610633565b90506000805482610936919061121f565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015290915060009073ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016906370a0823190602401602060405180830381865afa1580156109c6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109ea919061117c565b905081811015610abf5773ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000166340c10f1930610a3b8486611237565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b16815273ffffffffffffffffffffffffffffffffffffffff90921660048301526024820152604401600060405180830381600087803b158015610aa657600080fd5b505af1158015610aba573d6000803e3d6000fd5b505050505b6040517fa9059cbb00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000081166004830152602482018590527f0000000000000000000000000000000000000000000000000000000000000000169063a9059cbb906044016020604051808303816000875af1158015610b74573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b989190611195565b610ba157600080fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663811a40fe6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610c0957600080fd5b505af1158015610c1d573d6000803e3d6000fd5b505050507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663b21ed5026040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610c8957600080fd5b505af1158015610c9d573d6000803e3d6000fd5b50506000546040517f095ea7b300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016935063095ea7b39250610d57917f00000000000000000000000000000000000000000000000000000000000000009160040173ffffffffffffffffffffffffffffffffffffffff929092168252602082015260400190565b6020604051808303816000875af1158015610d76573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d9a9190611195565b506000546040517f3c6b16ab00000000000000000000000000000000000000000000000000000000815260048101919091527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1690633c6b16ab90602401600060405180830381600087803b158015610e2757600080fd5b505af1158015610e3b573d6000803e3d6000fd5b505050503373ffffffffffffffffffffffffffffffffffffffff167fb4c03061fb5b7fed76389d5af8f2e0ddb09f8c70d1333abbb62582835e10accb600054610e82610788565b610e8a61021a565b6040805193845260208401929092529082015260600160405180910390a25050505b919050565b600081831015610ec15781610ec3565b825b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715610f4057610f40610eca565b604052919050565b600067ffffffffffffffff821115610f6257610f62610eca565b5060051b60200190565b600082601f830112610f7d57600080fd5b81356020610f92610f8d83610f48565b610ef9565b82815260059290921b84018101918181019086841115610fb157600080fd5b8286015b84811015610fcc5780358352918301918301610fb5565b509695505050505050565b600080600060608486031215610fec57600080fd5b833567ffffffffffffffff8082111561100457600080fd5b818601915086601f83011261101857600080fd5b81356020611028610f8d83610f48565b82815260059290921b8401810191818101908a84111561104757600080fd5b948201945b8386101561108857853573ffffffffffffffffffffffffffffffffffffffff811681146110795760008081fd5b8252948201949082019061104c565b9750508701359250508082111561109e57600080fd5b506110ab86828701610f6c565b925050604084013590509250925092565b6000602082840312156110ce57600080fd5b5035919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561113c5761113c6110d5565b500290565b600082611177577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b60006020828403121561118e57600080fd5b5051919050565b6000602082840312156111a757600080fd5b81518015158114610ec357600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611218576112186110d5565b5060010190565b60008219821115611232576112326110d5565b500190565b600082821015611249576112496110d5565b50039056fea264697066735822122076ec19bff993b80d16f9aba18251c2e57637c3d6175e18302b4dee0b98da107864736f6c634300080b0033";

type BaseV1MinterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BaseV1MinterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BaseV1Minter__factory extends ContractFactory {
  constructor(...args: BaseV1MinterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "BaseV1Minter";
  }

  deploy(
    __voter: string,
    __ve: string,
    __ve_dist: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<BaseV1Minter> {
    return super.deploy(
      __voter,
      __ve,
      __ve_dist,
      overrides || {}
    ) as Promise<BaseV1Minter>;
  }
  getDeployTransaction(
    __voter: string,
    __ve: string,
    __ve_dist: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      __voter,
      __ve,
      __ve_dist,
      overrides || {}
    );
  }
  attach(address: string): BaseV1Minter {
    return super.attach(address) as BaseV1Minter;
  }
  connect(signer: Signer): BaseV1Minter__factory {
    return super.connect(signer) as BaseV1Minter__factory;
  }
  static readonly contractName: "BaseV1Minter";
  public readonly contractName: "BaseV1Minter";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BaseV1MinterInterface {
    return new utils.Interface(_abi) as BaseV1MinterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BaseV1Minter {
    return new Contract(address, _abi, signerOrProvider) as BaseV1Minter;
  }
}
