/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomiclabs/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "BaseV1Factory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BaseV1Factory__factory>;
    getContractFactory(
      name: "BaseV1Fees",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BaseV1Fees__factory>;
    getContractFactory(
      name: "BaseV1Pair",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BaseV1Pair__factory>;
    getContractFactory(
      name: "Erc20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Erc20__factory>;
    getContractFactory(
      name: "IBaseV1Callee",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IBaseV1Callee__factory>;
    getContractFactory(
      name: "BaseV1GaugeFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BaseV1GaugeFactory__factory>;
    getContractFactory(
      name: "Erc20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Erc20__factory>;
    getContractFactory(
      name: "Gauge",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Gauge__factory>;
    getContractFactory(
      name: "IBaseV1Core",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IBaseV1Core__factory>;
    getContractFactory(
      name: "IBaseV1Factory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IBaseV1Factory__factory>;
    getContractFactory(
      name: "IBribe",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IBribe__factory>;
    getContractFactory(
      name: "Ve",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Ve__factory>;
    getContractFactory(
      name: "Voter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Voter__factory>;
    getContractFactory(
      name: "BaseV1Minter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BaseV1Minter__factory>;
    getContractFactory(
      name: "Underlying",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Underlying__factory>;
    getContractFactory(
      name: "VeDist",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VeDist__factory>;
    getContractFactory(
      name: "Ve",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Ve__factory>;
    getContractFactory(
      name: "Voter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Voter__factory>;
    getContractFactory(
      name: "BaseV1Router01",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BaseV1Router01__factory>;
    getContractFactory(
      name: "Erc20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Erc20__factory>;
    getContractFactory(
      name: "IBaseV1Factory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IBaseV1Factory__factory>;
    getContractFactory(
      name: "IBaseV1Pair",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IBaseV1Pair__factory>;
    getContractFactory(
      name: "IWFTM",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IWFTM__factory>;
    getContractFactory(
      name: "BaseV1Voter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BaseV1Voter__factory>;
    getContractFactory(
      name: "Bribe",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Bribe__factory>;
    getContractFactory(
      name: "Erc20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Erc20__factory>;
    getContractFactory(
      name: "IBaseV1Core",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IBaseV1Core__factory>;
    getContractFactory(
      name: "IBaseV1Factory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IBaseV1Factory__factory>;
    getContractFactory(
      name: "IBaseV1GaugeFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IBaseV1GaugeFactory__factory>;
    getContractFactory(
      name: "IGauge",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IGauge__factory>;
    getContractFactory(
      name: "Ve",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Ve__factory>;
    getContractFactory(
      name: "BaseV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BaseV1__factory>;
    getContractFactory(
      name: "Roots",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Roots__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "StakingRewards",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.StakingRewards__factory>;
    getContractFactory(
      name: "Token",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Token__factory>;
    getContractFactory(
      name: "VeDistTest",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VeDistTest__factory>;
    getContractFactory(
      name: "VeTest",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VeTest__factory>;
    getContractFactory(
      name: "VoterTest",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VoterTest__factory>;
    getContractFactory(
      name: "Erc20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Erc20__factory>;
    getContractFactory(
      name: "VeDist",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VeDist__factory>;
    getContractFactory(
      name: "VotingEscrow",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VotingEscrow__factory>;
    getContractFactory(
      name: "IERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC165__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "IERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721__factory>;
    getContractFactory(
      name: "IERC721Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Metadata__factory>;
    getContractFactory(
      name: "IERC721Receiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Receiver__factory>;
    getContractFactory(
      name: "Ve",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Ve__factory>;

    getContractAt(
      name: "BaseV1Factory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BaseV1Factory>;
    getContractAt(
      name: "BaseV1Fees",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BaseV1Fees>;
    getContractAt(
      name: "BaseV1Pair",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BaseV1Pair>;
    getContractAt(
      name: "Erc20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Erc20>;
    getContractAt(
      name: "IBaseV1Callee",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IBaseV1Callee>;
    getContractAt(
      name: "BaseV1GaugeFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BaseV1GaugeFactory>;
    getContractAt(
      name: "Erc20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Erc20>;
    getContractAt(
      name: "Gauge",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Gauge>;
    getContractAt(
      name: "IBaseV1Core",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IBaseV1Core>;
    getContractAt(
      name: "IBaseV1Factory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IBaseV1Factory>;
    getContractAt(
      name: "IBribe",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IBribe>;
    getContractAt(
      name: "Ve",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Ve>;
    getContractAt(
      name: "Voter",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Voter>;
    getContractAt(
      name: "BaseV1Minter",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BaseV1Minter>;
    getContractAt(
      name: "Underlying",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Underlying>;
    getContractAt(
      name: "VeDist",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.VeDist>;
    getContractAt(
      name: "Ve",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Ve>;
    getContractAt(
      name: "Voter",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Voter>;
    getContractAt(
      name: "BaseV1Router01",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BaseV1Router01>;
    getContractAt(
      name: "Erc20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Erc20>;
    getContractAt(
      name: "IBaseV1Factory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IBaseV1Factory>;
    getContractAt(
      name: "IBaseV1Pair",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IBaseV1Pair>;
    getContractAt(
      name: "IWFTM",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IWFTM>;
    getContractAt(
      name: "BaseV1Voter",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BaseV1Voter>;
    getContractAt(
      name: "Bribe",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Bribe>;
    getContractAt(
      name: "Erc20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Erc20>;
    getContractAt(
      name: "IBaseV1Core",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IBaseV1Core>;
    getContractAt(
      name: "IBaseV1Factory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IBaseV1Factory>;
    getContractAt(
      name: "IBaseV1GaugeFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IBaseV1GaugeFactory>;
    getContractAt(
      name: "IGauge",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IGauge>;
    getContractAt(
      name: "Ve",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Ve>;
    getContractAt(
      name: "BaseV1",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BaseV1>;
    getContractAt(
      name: "Roots",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Roots>;
    getContractAt(
      name: "IERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20>;
    getContractAt(
      name: "StakingRewards",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.StakingRewards>;
    getContractAt(
      name: "Token",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Token>;
    getContractAt(
      name: "VeDistTest",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.VeDistTest>;
    getContractAt(
      name: "VeTest",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.VeTest>;
    getContractAt(
      name: "VoterTest",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.VoterTest>;
    getContractAt(
      name: "Erc20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Erc20>;
    getContractAt(
      name: "VeDist",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.VeDist>;
    getContractAt(
      name: "VotingEscrow",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.VotingEscrow>;
    getContractAt(
      name: "IERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC165>;
    getContractAt(
      name: "IERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20>;
    getContractAt(
      name: "IERC721",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721>;
    getContractAt(
      name: "IERC721Metadata",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Metadata>;
    getContractAt(
      name: "IERC721Receiver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Receiver>;
    getContractAt(
      name: "Ve",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Ve>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.utils.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
  }
}
