/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Token, TokenInterface } from "../Token";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_decimals",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_anyswapRouter",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "oldVault",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newVault",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "effectiveTime",
        type: "uint256",
      },
    ],
    name: "LogChangeVault",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PERMIT_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "anyswapRouter",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_pendingRouter",
        type: "address",
      },
    ],
    name: "changeVault",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingAnyswapRouter",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingRouterDelay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405260006003553480156200001657600080fd5b506040516200152e3803806200152e833981016040819052620000399162000363565b600880546001600160a01b0319166001600160a01b038316179055835162000069906001906020870190620001f0565b5082516200007f906000906020860190620001f0565b50600282905560405146907f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f90620000ba9060019062000435565b60408051918290038220828201825260018352603160f81b6020938401528151928301939093528101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc66060820152608081018290523060a082015260c00160408051601f1981840301815291905280516020909101206006556200014533600062000151565b50505050505062000500565b6001600160a01b0382166000908152600460205260408120805483919083906200017d908490620004d9565b925050819055508160036000828254620001989190620004d9565b909155505060408051600081526001600160a01b03851660208201529081018390527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060600160405180910390a150600192915050565b828054620001fe90620003f8565b90600052602060002090601f0160209004810192826200022257600085556200026d565b82601f106200023d57805160ff19168380011785556200026d565b828001600101855582156200026d579182015b828111156200026d57825182559160200191906001019062000250565b506200027b9291506200027f565b5090565b5b808211156200027b576000815560010162000280565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620002be57600080fd5b81516001600160401b0380821115620002db57620002db62000296565b604051601f8301601f19908116603f0116810190828211818310171562000306576200030662000296565b816040528381526020925086838588010111156200032357600080fd5b600091505b8382101562000347578582018301518183018401529082019062000328565b83821115620003595760008385830101525b9695505050505050565b600080600080608085870312156200037a57600080fd5b84516001600160401b03808211156200039257600080fd5b620003a088838901620002ac565b95506020870151915080821115620003b757600080fd5b50620003c687828801620002ac565b60408701516060880151919550935090506001600160a01b0381168114620003ed57600080fd5b939692955090935050565b600181811c908216806200040d57607f821691505b602082108114156200042f57634e487b7160e01b600052602260045260246000fd5b50919050565b600080835481600182811c9150808316806200045257607f831692505b60208084108214156200047357634e487b7160e01b86526022600452602486fd5b8180156200048a57600181146200049c57620004cb565b60ff19861689528489019650620004cb565b60008a81526020902060005b86811015620004c35781548b820152908501908301620004a8565b505084890196505b509498975050505050505050565b60008219821115620004fb57634e487b7160e01b600052601160045260246000fd5b500190565b61101e80620005106000396000f3fe608060405234801561001057600080fd5b50600436106101775760003560e01c806370a08231116100d8578063a9059cbb1161008c578063dd62ed3e11610066578063dd62ed3e14610337578063e3d670d714610362578063fc0c546a1461039857600080fd5b8063a9059cbb14610306578063d505accf14610319578063db5de7961461032e57600080fd5b806395d89b41116100bd57806395d89b41146102cb5780639a3eb6e9146102d35780639dc29fac146102f357600080fd5b806370a082311461028b5780637ecebe00146102ab57600080fd5b806330adf81f1161012f5780633644e515116101145780633644e5151461025c57806340c10f191461026557806360e232a91461027857600080fd5b806330adf81f1461022c578063313ce5671461025357600080fd5b80630ed1713a116101605780630ed1713a146101bd57806318160ddd1461020257806323b872dd1461021957600080fd5b806306fdde031461017c578063095ea7b31461019a575b600080fd5b61018461039e565b6040516101919190610d3a565b60405180910390f35b6101ad6101a8366004610dd6565b61042c565b6040519015158152602001610191565b6009546101dd9073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610191565b61020b60035481565b604051908152602001610191565b6101ad610227366004610e00565b6104aa565b61020b7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c981565b61020b60025481565b61020b60065481565b6101ad610273366004610dd6565b61055c565b6101ad610286366004610e3c565b610572565b61020b610299366004610e3c565b60046020526000908152604090205481565b61020b6102b9366004610e3c565b60076020526000908152604090205481565b6101846106d6565b6008546101dd9073ffffffffffffffffffffffffffffffffffffffff1681565b6101ad610301366004610dd6565b6106e3565b6101ad610314366004610dd6565b6107c9565b61032c610327366004610e57565b6107dd565b005b61020b600a5481565b61020b610345366004610eca565b600560209081526000928352604080842090915290825290205481565b61020b610370366004610e3c565b73ffffffffffffffffffffffffffffffffffffffff1660009081526004602052604090205490565b306101dd565b600180546103ab90610efd565b80601f01602080910402602001604051908101604052809291908181526020018280546103d790610efd565b80156104245780601f106103f957610100808354040283529160200191610424565b820191906000526020600020905b81548152906001019060200180831161040757829003601f168201915b505050505081565b33600081815260056020908152604080832073ffffffffffffffffffffffffffffffffffffffff87168085529083528184208690558151948552918401919091528201839052907f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906060015b60405180910390a150600192915050565b73ffffffffffffffffffffffffffffffffffffffff831660009081526005602090815260408083203384529091528120547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146105485773ffffffffffffffffffffffffffffffffffffffff8516600090815260056020908152604080832033845290915281208054859290610542908490610f80565b90915550505b610553858585610b34565b95945050505050565b60006105688383610c0c565b5060019392505050565b600061057c610cb5565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146105b357600080fd5b73ffffffffffffffffffffffffffffffffffffffff8216610635576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601c60248201527f416e7973776170563345524332303a206164647265737328307830290000000060448201526064015b60405180910390fd5b600980547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff84161790556106824262015180610f97565b600a81905560085460405173ffffffffffffffffffffffffffffffffffffffff8086169216907f5c364079e7102c27c608f9b237c735a1b7bfa0b67f27c2ad26bad447bf965cac90600090a4506001919050565b600080546103ab90610efd565b60006106ed610cb5565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461072457600080fd5b81600360008282546107369190610f80565b909155505073ffffffffffffffffffffffffffffffffffffffff831660009081526004602052604081208054849290610770908490610f80565b90915550506040805173ffffffffffffffffffffffffffffffffffffffff85168152600060208201529081018390527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90606001610499565b60006107d6338484610b34565b9392505050565b42841015610847576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f537461626c6556313a2045585049524544000000000000000000000000000000604482015260640161062c565b60065473ffffffffffffffffffffffffffffffffffffffff8816600090815260076020526040812080549192917f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9918b918b918b9190876108a783610faf565b9091555060408051602081019690965273ffffffffffffffffffffffffffffffffffffffff94851690860152929091166060840152608083015260a082015260c0810187905260e001604051602081830303815290604052805190602001206040516020016109489291907f190100000000000000000000000000000000000000000000000000000000000081526002810192909252602282015260420190565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181528282528051602091820120600080855291840180845281905260ff88169284019290925260608301869052608083018590529092509060019060a0016020604051602081039080840390855afa1580156109d1573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015191505073ffffffffffffffffffffffffffffffffffffffff811615801590610a4c57508873ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b610ab2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f537461626c6556313a20494e56414c49445f5349474e41545552450000000000604482015260640161062c565b73ffffffffffffffffffffffffffffffffffffffff8981166000818152600560209081526040808320948d16808452948252918290208b905581519283528201929092529081018890527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259060600160405180910390a1505050505050505050565b73ffffffffffffffffffffffffffffffffffffffff8316600090815260046020526040812080548391908390610b6b908490610f80565b909155505073ffffffffffffffffffffffffffffffffffffffff831660009081526004602052604081208054849290610ba5908490610f97565b90915550506040805173ffffffffffffffffffffffffffffffffffffffff8087168252851660208201529081018390527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060600160405180910390a15060019392505050565b73ffffffffffffffffffffffffffffffffffffffff8216600090815260046020526040812080548391908390610c43908490610f97565b925050819055508160036000828254610c5c9190610f97565b9091555050604080516000815273ffffffffffffffffffffffffffffffffffffffff851660208201529081018390527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90606001610499565b6000600a54600014158015610ccb575042600a54105b15610d1d57600954600880547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff9092169190911790556000600a555b5060085473ffffffffffffffffffffffffffffffffffffffff1690565b600060208083528351808285015260005b81811015610d6757858101830151858201604001528201610d4b565b81811115610d79576000604083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016929092016040019392505050565b803573ffffffffffffffffffffffffffffffffffffffff81168114610dd157600080fd5b919050565b60008060408385031215610de957600080fd5b610df283610dad565b946020939093013593505050565b600080600060608486031215610e1557600080fd5b610e1e84610dad565b9250610e2c60208501610dad565b9150604084013590509250925092565b600060208284031215610e4e57600080fd5b6107d682610dad565b600080600080600080600060e0888a031215610e7257600080fd5b610e7b88610dad565b9650610e8960208901610dad565b95506040880135945060608801359350608088013560ff81168114610ead57600080fd5b9699959850939692959460a0840135945060c09093013592915050565b60008060408385031215610edd57600080fd5b610ee683610dad565b9150610ef460208401610dad565b90509250929050565b600181811c90821680610f1157607f821691505b60208210811415610f4b577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600082821015610f9257610f92610f51565b500390565b60008219821115610faa57610faa610f51565b500190565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610fe157610fe1610f51565b506001019056fea264697066735822122032c1af87d1c240aedb6e51ce724012288261ffa99d5a0d672e5484689e7cab1164736f6c634300080b0033";

type TokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Token__factory extends ContractFactory {
  constructor(...args: TokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Token";
  }

  deploy(
    _name: string,
    _symbol: string,
    _decimals: BigNumberish,
    _anyswapRouter: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Token> {
    return super.deploy(
      _name,
      _symbol,
      _decimals,
      _anyswapRouter,
      overrides || {}
    ) as Promise<Token>;
  }
  getDeployTransaction(
    _name: string,
    _symbol: string,
    _decimals: BigNumberish,
    _anyswapRouter: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _name,
      _symbol,
      _decimals,
      _anyswapRouter,
      overrides || {}
    );
  }
  attach(address: string): Token {
    return super.attach(address) as Token;
  }
  connect(signer: Signer): Token__factory {
    return super.connect(signer) as Token__factory;
  }
  static readonly contractName: "Token";
  public readonly contractName: "Token";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenInterface {
    return new utils.Interface(_abi) as TokenInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Token {
    return new Contract(address, _abi, signerOrProvider) as Token;
  }
}
