/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { BaseV1, BaseV1Interface } from "../BaseV1";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "minter",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_minter",
        type: "address",
      },
    ],
    name: "setMinter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526000805534801561001457600080fd5b50600380546001600160a01b0319163390811790915561003590600061003b565b506100f2565b6001600160a01b0382166000908152600160205260408120805483919083906100659084906100cc565b925050819055508160008082825461007d91906100cc565b90915550506040518281526001600160a01b038416906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a350600192915050565b600082198211156100ed57634e487b7160e01b600052601160045260246000fd5b500190565b6107ea806101016000396000f3fe608060405234801561001057600080fd5b50600436106100d45760003560e01c806340c10f1911610081578063a9059cbb1161005b578063a9059cbb14610246578063dd62ed3e14610259578063fca3b5aa1461028457600080fd5b806340c10f19146101d757806370a08231146101ea57806395d89b411461020a57600080fd5b806318160ddd116100b257806318160ddd1461019357806323b872dd146101aa578063313ce567146101bd57600080fd5b806306fdde03146100d9578063075461721461012b578063095ea7b314610170575b600080fd5b6101156040518060400160405280600781526020017f536f6c69646c790000000000000000000000000000000000000000000000000081525081565b6040516101229190610606565b60405180910390f35b60035461014b9073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610122565b61018361017e3660046106a2565b610299565b6040519015158152602001610122565b61019c60005481565b604051908152602001610122565b6101836101b83660046106cc565b610312565b6101c5601281565b60405160ff9091168152602001610122565b6101836101e53660046106a2565b6103c4565b61019c6101f8366004610708565b60016020526000908152604090205481565b6101156040518060400160405280600581526020017f534f4c494400000000000000000000000000000000000000000000000000000081525081565b6101836102543660046106a2565b6103ff565b61019c610267366004610723565b600260209081526000928352604080842090915290825290205481565b610297610292366004610708565b610413565b005b33600081815260026020908152604080832073ffffffffffffffffffffffffffffffffffffffff8716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906103019086815260200190565b60405180910390a350600192915050565b73ffffffffffffffffffffffffffffffffffffffff831660009081526002602090815260408083203384529091528120547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146103b05773ffffffffffffffffffffffffffffffffffffffff85166000908152600260209081526040808320338452909152812080548592906103aa908490610785565b90915550505b6103bb85858561047e565b95945050505050565b60035460009073ffffffffffffffffffffffffffffffffffffffff1633146103eb57600080fd5b6103f58383610567565b5060019392505050565b600061040c33848461047e565b9392505050565b60035473ffffffffffffffffffffffffffffffffffffffff16331461043757600080fd5b600380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b73ffffffffffffffffffffffffffffffffffffffff83166000908152600160205260408120805483919083906104b5908490610785565b909155505073ffffffffffffffffffffffffffffffffffffffff8316600090815260016020526040812080548492906104ef90849061079c565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161055591815260200190565b60405180910390a35060019392505050565b73ffffffffffffffffffffffffffffffffffffffff821660009081526001602052604081208054839190839061059e90849061079c565b92505081905550816000808282546105b6919061079c565b909155505060405182815273ffffffffffffffffffffffffffffffffffffffff8416906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001610301565b600060208083528351808285015260005b8181101561063357858101830151858201604001528201610617565b81811115610645576000604083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016929092016040019392505050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461069d57600080fd5b919050565b600080604083850312156106b557600080fd5b6106be83610679565b946020939093013593505050565b6000806000606084860312156106e157600080fd5b6106ea84610679565b92506106f860208501610679565b9150604084013590509250925092565b60006020828403121561071a57600080fd5b61040c82610679565b6000806040838503121561073657600080fd5b61073f83610679565b915061074d60208401610679565b90509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008282101561079757610797610756565b500390565b600082198211156107af576107af610756565b50019056fea264697066735822122060c7512a520b1081faeff0ded32447cc07a03e46350da42c4d259fdb4093a81164736f6c634300080b0033";

type BaseV1ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BaseV1ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BaseV1__factory extends ContractFactory {
  constructor(...args: BaseV1ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "BaseV1";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<BaseV1> {
    return super.deploy(overrides || {}) as Promise<BaseV1>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): BaseV1 {
    return super.attach(address) as BaseV1;
  }
  connect(signer: Signer): BaseV1__factory {
    return super.connect(signer) as BaseV1__factory;
  }
  static readonly contractName: "BaseV1";
  public readonly contractName: "BaseV1";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BaseV1Interface {
    return new utils.Interface(_abi) as BaseV1Interface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): BaseV1 {
    return new Contract(address, _abi, signerOrProvider) as BaseV1;
  }
}
