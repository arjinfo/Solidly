/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { BaseV1Fees, BaseV1FeesInterface } from "../BaseV1Fees";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_token0",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token1",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount1",
        type: "uint256",
      },
    ],
    name: "claimFeesFor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60e060405234801561001057600080fd5b506040516103d23803806103d283398101604081905261002f91610066565b336080526001600160a01b0391821660a0521660c052610099565b80516001600160a01b038116811461006157600080fd5b919050565b6000806040838503121561007957600080fd5b6100828361004a565b91506100906020840161004a565b90509250929050565b60805160a05160c05161030d6100c5600039600060c301526000609201526000605d015261030d6000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063533cf5ce14610030575b600080fd5b61004361003e366004610225565b610045565b005b3373ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000161461008757600080fd5b81156100b8576100b87f000000000000000000000000000000000000000000000000000000000000000084846100ee565b80156100e9576100e97f000000000000000000000000000000000000000000000000000000000000000084836100ee565b505050565b60008373ffffffffffffffffffffffffffffffffffffffff163b1161011257600080fd5b6040805173ffffffffffffffffffffffffffffffffffffffff8481166024830152604480830185905283518084039091018152606490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb0000000000000000000000000000000000000000000000000000000017905291516000928392908716916101a99190610273565b6000604051808303816000865af19150503d80600081146101e6576040519150601f19603f3d011682016040523d82523d6000602084013e6101eb565b606091505b509150915081801561021557508051158061021557508080602001905181019061021591906102ae565b61021e57600080fd5b5050505050565b60008060006060848603121561023a57600080fd5b833573ffffffffffffffffffffffffffffffffffffffff8116811461025e57600080fd5b95602085013595506040909401359392505050565b6000825160005b81811015610294576020818601810151858301520161027a565b818111156102a3576000828501525b509190910192915050565b6000602082840312156102c057600080fd5b815180151581146102d057600080fd5b939250505056fea2646970667358221220b1a624686e3b7f70b3aa2d6f1afa1d68602ee319678e79e23c280cd59379d9b264736f6c634300080b0033";

type BaseV1FeesConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BaseV1FeesConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BaseV1Fees__factory extends ContractFactory {
  constructor(...args: BaseV1FeesConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "BaseV1Fees";
  }

  deploy(
    _token0: string,
    _token1: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<BaseV1Fees> {
    return super.deploy(
      _token0,
      _token1,
      overrides || {}
    ) as Promise<BaseV1Fees>;
  }
  getDeployTransaction(
    _token0: string,
    _token1: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_token0, _token1, overrides || {});
  }
  attach(address: string): BaseV1Fees {
    return super.attach(address) as BaseV1Fees;
  }
  connect(signer: Signer): BaseV1Fees__factory {
    return super.connect(signer) as BaseV1Fees__factory;
  }
  static readonly contractName: "BaseV1Fees";
  public readonly contractName: "BaseV1Fees";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BaseV1FeesInterface {
    return new utils.Interface(_abi) as BaseV1FeesInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BaseV1Fees {
    return new Contract(address, _abi, signerOrProvider) as BaseV1Fees;
  }
}
