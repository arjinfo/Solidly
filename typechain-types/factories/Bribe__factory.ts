/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Bribe, BribeInterface } from "../Bribe";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "reward",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "ClaimRewards",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "reward",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "NotifyReward",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [],
    name: "DURATION",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PRECISION",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "_deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "_ve",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "_withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "maxRuns",
        type: "uint256",
      },
    ],
    name: "batchRewardPerToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxRuns",
        type: "uint256",
      },
    ],
    name: "batchUserRewards",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "checkpoints",
    outputs: [
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "balanceOf",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "earned",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "factory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "getPriorBalanceIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "getPriorRewardPerToken",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "getPriorSupplyIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "tokens",
        type: "address[]",
      },
    ],
    name: "getReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "tokens",
        type: "address[]",
      },
    ],
    name: "getRewardForOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isReward",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "lastEarn",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "lastTimeRewardApplicable",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "lastUpdateTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "notifyRewardAmount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "numCheckpoints",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "periodFinish",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "rewardPerToken",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "rewardPerTokenCheckpoints",
    outputs: [
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rewardPerToken",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "rewardPerTokenNumCheckpoints",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "rewardPerTokenStored",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "rewardRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "rewards",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardsListLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "supplyCheckpoints",
    outputs: [
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "supply",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "supplyNumCheckpoints",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "userRewardPerTokenStored",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "userRewards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60c060405260016011553480156200001657600080fd5b5033608081905260408051638dd598fb60e01b81529051638dd598fb916004808201926020929091908290030181865afa15801562000059573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200007f919062000091565b6001600160a01b031660a052620000c3565b600060208284031215620000a457600080fd5b81516001600160a01b0381168114620000bc57600080fd5b9392505050565b60805160a0516129916200010c6000396000818161043401528181610d4c01526115f601526000818161052e01528181610ac801528181610cf001526114ef01526129916000f3fe608060405234801561001057600080fd5b50600436106102415760003560e01c80639ce43f9011610145578063e6886396116100bd578063f301af421161008c578063f5f8d36511610071578063f5f8d365146105e5578063f7412baf146105f8578063fd3140981461061f57600080fd5b8063f301af42146105bf578063f3207723146105d257600080fd5b8063e688639614610570578063e8111a1214610578578063f122977714610581578063f25e55a51461059457600080fd5b8063aa47965211610114578063b66503cf116100f9578063b66503cf14610516578063c45a015514610529578063da09d19d1461055057600080fd5b8063aa479652146104e7578063aaf5eb681461050757600080fd5b80639ce43f901461048e5780639e2bf22c146104ae578063a28d4c9c146104c1578063a7852afa146104d457600080fd5b806349dcc204116101d8578063638634ee116101a757806376f4be361161018c57806376f4be361461041c5780638dd598fb1461042f5780639cc7f7081461046e57600080fd5b8063638634ee146103de57806363c2a20a146103f157600080fd5b806349dcc204146103465780634d5ce0381461037857806350589793146103ab5780635a45d052146103cb57600080fd5b80632ce9aead116102145780632ce9aead146102d35780633b881999146102f35780633e491d471461031e57806341c67bb91461033157600080fd5b806301316ddf1461024657806318160ddd146102925780631be05289146102a9578063221ca18c146102b3575b600080fd5b6102786102543660046125b3565b600f6020908152600092835260408084209091529082529020805460019091015482565b604080519283526020830191909152015b60405180910390f35b61029b60095481565b604051908152602001610289565b61029b62093a8081565b61029b6102c13660046125df565b60006020819052908152604090205481565b61029b6102e13660046125df565b60026020526000908152604090205481565b61029b6103013660046125b3565b600560209081526000928352604080842090915290825290205481565b61029b61032c3660046125b3565b610632565b61034461033f3660046125fc565b6108b3565b005b610278610354366004612631565b600b6020908152600092835260408084209091529082529020805460019091015482565b61039b6103863660046125df565b60086020526000908152604090205460ff1681565b6040519015158152602001610289565b61029b6103b9366004612653565b600c6020526000908152604090205481565b6103446103d93660046125b3565b61092f565b61029b6103ec3660046125df565b610967565b61029b6103ff3660046125b3565b600660209081526000928352604080842090915290825290205481565b61029b61042a366004612653565b61098b565b6104567f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610289565b61029b61047c366004612653565b600a6020526000908152604090205481565b61029b61049c3660046125df565b60036020526000908152604090205481565b6103446104bc366004612631565b610abd565b61029b6104cf366004612631565b610b8e565b6103446104e236600461269b565b610cd1565b61029b6104f53660046125df565b60106020526000908152604090205481565b61029b670de0b6b3a764000081565b6103446105243660046125b3565b61107f565b6104567f000000000000000000000000000000000000000000000000000000000000000081565b61029b61055e3660046125df565b60016020526000908152604090205481565b60075461029b565b61029b600e5481565b61029b61058f3660046125df565b6113fc565b61029b6105a23660046125b3565b600460209081526000928352604080842090915290825290205481565b6104566105cd366004612653565b6114ba565b6103446105e0366004612631565b6114e4565b6103446105f336600461269b565b6115ad565b610278610606366004612653565b600d602052600090815260409020805460019091015482565b61027861062d3660046125b3565b611922565b6001600160a01b0382166000908152600460209081526040808320848452825280832054600c90925282205461068d5750506001600160a01b03821660009081526006602090815260408083208484529091529020546108ad565b60006106998483610b8e565b6000858152600c6020526040812054919250906106b8906001906127b9565b6001600160a01b038716600090815260066020908152604080832089845290915290205490915060016106eb84846127b9565b11156107f157825b6106fe6001846127b9565b8110156107ef576000878152600b60208181526040808420858552808352818520825180840190935280548352600190810154838501528c8652939092529291829061074b9086906127d0565b8152602001908152602001600020604051806040016040529081600082015481526020016001820154815250509050600061078a8b8460000151611922565b509050600061079d8c8460000151611922565b509050670de0b6b3a76400006107b383836127b9565b85602001516107c291906127e8565b6107cc9190612825565b6107d690876127d0565b95505050505080806107e790612860565b9150506106f3565b505b6000868152600b60209081526040808320858452825280832081518083019092528054808352600190910154928201929092529190610831908a90611922565b506001600160a01b038a1660009081526005602090815260408083208c8452909152902054909150670de0b6b3a76400009061086e908390611b41565b6108778b6113fc565b61088191906127b9565b836020015161089091906127e8565b61089a9190612825565b6108a490846127d0565b96505050505050505b92915050565b6108bc83611b58565b6001600160a01b0385166000908152600360209081526040808320600290925290912091909155556108ef838383611d14565b6001600160a01b03909416600081815260066020908152604080832087845282528083209383526004825280832096835295905293909320939093555055565b6109398282611edc565b6001600160a01b03909316600090815260036020908152604080832060029092529091209390935590915550565b6001600160a01b0381166000908152600160205260408120546108ad904290612012565b600e546000908061099f5750600092915050565b82600d60006109af6001856127b9565b815260200190815260200160002060000154116109d8576109d16001826127b9565b9392505050565b60008052600d6020527f81955a0a11e65eac625c29e8882660bae4e165a75d72780094acae8ece9a29ee54831015610a135750600092915050565b600080610a216001846127b9565b90505b81811115610ab55760006002610a3a84846127b9565b610a449190612825565b610a4e90836127b9565b6000818152600d6020908152604091829020825180840190935280548084526001909101549183019190915291925090871415610a8f575095945050505050565b8051871115610aa057819350610aae565b610aab6001836127b9565b92505b5050610a24565b509392505050565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610af257600080fd5b8160096000828254610b0491906127b9565b90915550506000818152600a602052604081208054849290610b279084906127b9565b90915550506000818152600a6020526040902054610b46908290612021565b610b4e6120fa565b604080518281526020810184905233917ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b56891015b60405180910390a25050565b6000828152600c602052604081205480610bac5760009150506108ad565b6000848152600b602052604081208491610bc76001856127b9565b81526020019081526020016000206000015411610bf157610be96001826127b9565b9150506108ad565b6000848152600b60209081526040808320838052909152902054831015610c1c5760009150506108ad565b600080610c2a6001846127b9565b90505b81811115610cc85760006002610c4384846127b9565b610c4d9190612825565b610c5790836127b9565b6000888152600b60209081526040808320848452825291829020825180840190935280548084526001909101549183019190915291925090871415610ca2575093506108ad92505050565b8051871115610cb357819350610cc1565b610cbe6001836127b9565b92505b5050610c2d565b50949350505050565b601154600114610ce057600080fd5b6002601155336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610d1a57600080fd5b6040517f6352211e000000000000000000000000000000000000000000000000000000008152600481018390526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690636352211e90602401602060405180830381865afa158015610d9b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dbf9190612899565b905060005b825181101561107457610def838281518110610de257610de26128b6565b6020026020010151611b58565b60036000868581518110610e0557610e056128b6565b60200260200101516001600160a01b03166001600160a01b03168152602001908152602001600020600060026000888781518110610e4557610e456128b6565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060008491905055839190505550506000610ea0848381518110610e9257610e926128b6565b602002602001015186610632565b9050600060066000868581518110610eba57610eba6128b6565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020016000206000878152602001908152602001600020819055504260046000868581518110610f0e57610f0e6128b6565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060008781526020019081526020016000208190555060036000858481518110610f6157610f616128b6565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020016000205460056000868581518110610fa057610fa06128b6565b6020908102919091018101516001600160a01b0316825281810192909252604090810160009081208982529092529020558015610ffb57610ffb848381518110610fec57610fec6128b6565b6020026020010151848361219e565b83828151811061100d5761100d6128b6565b60200260200101516001600160a01b0316836001600160a01b03167f9aa05b3d70a9e3e2f004f039648839560576334fb45c81f91b6db03ad9e2efc98360405161105991815260200190565b60405180910390a3508061106c81612860565b915050610dc4565b505060016011555050565b60115460011461108e57600080fd5b600260115561109c82611b58565b6001600160a01b038416600090815260036020908152604080832060028352818420949094559390925560019091522054421061110a576110df823330846122bb565b6110ec62093a8082612825565b6001600160a01b0383166000908152602081905260409020556111a3565b6001600160a01b03821660009081526001602052604081205461112e9042906127b9565b6001600160a01b0384166000908152602081905260408120549192509061115590836127e8565b905080831161116357600080fd5b61116f843330866122bb565b62093a8061117d82856127d0565b6111879190612825565b6001600160a01b03851660009081526020819052604090205550505b6001600160a01b0382166000908152602081905260409020546111c557600080fd5b6040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201526000906001600160a01b038416906370a0823190602401602060405180830381865afa158015611225573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061124991906128e5565b905061125862093a8082612825565b6001600160a01b03841660009081526020819052604090205411156112dd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f50726f76696465642072657761726420746f6f20686967680000000000000000604482015260640160405180910390fd5b6112ea62093a80426127d0565b6001600160a01b03841660009081526001602090815260408083209390935560089052205460ff166113b2576001600160a01b038316600081815260086020526040812080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660019081179091556007805491820181559091527fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c6880180547fffffffffffffffffffffffff00000000000000000000000000000000000000001690911790555b6040518281526001600160a01b0384169033907ff70d5c697de7ea828df48e5c4573cb2194c659f1901f70110c52b066dcf508269060200160405180910390a35050600160115550565b60006009546000141561142557506001600160a01b031660009081526003602052604090205490565b6009546001600160a01b0383166000908152602081815260408083205460028352818420546001909352922054670de0b6b3a7640000929161146691612012565b61146f86610967565b61147991906127b9565b61148391906127e8565b61148d91906127e8565b6114979190612825565b6001600160a01b0383166000908152600360205260409020546108ad91906127d0565b600781815481106114ca57600080fd5b6000918252602090912001546001600160a01b0316905081565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461151957600080fd5b816009600082825461152b91906127d0565b90915550506000818152600a60205260408120805484929061154e9084906127d0565b90915550506000818152600a602052604090205461156d908290612021565b6115756120fa565b604080518281526020810184905233917f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a159101610b82565b6011546001146115bc57600080fd5b60026011556040517f430c2081000000000000000000000000000000000000000000000000000000008152336004820152602481018390527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063430c208190604401602060405180830381865afa158015611645573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061166991906128fe565b61167257600080fd5b60005b815181101561191857611693828281518110610de257610de26128b6565b600360008585815181106116a9576116a96128b6565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020016000206000600260008787815181106116e9576116e96128b6565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060008491905055839190505550506000611744838381518110611736576117366128b6565b602002602001015185610632565b905060006006600085858151811061175e5761175e6128b6565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060008681526020019081526020016000208190555042600460008585815181106117b2576117b26128b6565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060008681526020019081526020016000208190555060036000848481518110611805576118056128b6565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020016000205460056000858581518110611844576118446128b6565b6020908102919091018101516001600160a01b031682528181019290925260409081016000908120888252909252902055801561189f5761189f838381518110611890576118906128b6565b6020026020010151338361219e565b8282815181106118b1576118b16128b6565b60200260200101516001600160a01b0316336001600160a01b03167f9aa05b3d70a9e3e2f004f039648839560576334fb45c81f91b6db03ad9e2efc9836040516118fd91815260200190565b60405180910390a3508061191081612860565b915050611675565b5050600160115550565b6001600160a01b03821660009081526010602052604081205481908061194f576000809250925050611b3a565b6001600160a01b0385166000908152600f6020526040812085916119746001856127b9565b81526020019081526020016000206000015411611a11576001600160a01b0385166000908152600f60205260408120906119af6001846127b9565b815260200190815260200160002060010154600f6000876001600160a01b03166001600160a01b0316815260200190815260200160002060006001846119f591906127b9565b8152602001908152602001600020600001549250925050611b3a565b6001600160a01b0385166000908152600f60209081526040808320838052909152902054841015611a49576000809250925050611b3a565b600080611a576001846127b9565b90505b81811115611b095760006002611a7084846127b9565b611a7a9190612825565b611a8490836127b9565b6001600160a01b0389166000908152600f60209081526040808320848452825291829020825180840190935280548084526001909101549183019190915291925090881415611ae357602081015190519096509450611b3a9350505050565b8051881115611af457819350611b02565b611aff6001836127b9565b92505b5050611a5a565b506001600160a01b0386166000908152600f6020908152604080832093835292905220600181015490549093509150505b9250929050565b600081831015611b5157816109d1565b5090919050565b6001600160a01b0381166000908152600260209081526040808320546003909252822054600e5483929190611b905794909350915050565b6000611b9b8361098b565b905060006001600e54611bae91906127b9565b90506001611bbc83836127b9565b1115611c9457815b611bcf6001836127b9565b811015611c92576000818152600d60209081526040918290208251808401909352805483526001015490820181905215611c7f576000600d81611c138560016127d0565b8152602001908152602001600020604051806040016040529081600082015481526020016001820154815250509050600080611c5e8c8460000151866000015187602001518d6123e1565b9092509050611c6d82896127d0565b9750611c7a8c898361249c565b975050505b5080611c8a81612860565b915050611bc4565b505b6000818152600d60209081526040918290208251808401909352805483526001015490820181905215611d06576000611ce789611cd08b610967565b8451611cdc908a611b41565b85602001518a6123e1565b509050611cf481866127d0565b9450611d0189864261249c565b429550505b509196929550919350505050565b6001600160a01b0383166000908152600460209081526040808320858452825280832054600c909252822054829190611d74576001600160a01b038616600090815260066020908152604080832088845290915290205492509050611ed4565b6000611d808683610b8e565b6000878152600c602052604081205491925090611da990611da3906001906127b9565b87612012565b6001600160a01b03891660009081526006602090815260408083208b8452909152902054909150825b82811015611ecb576000898152600b60208181526040808420858552808352818520825180840190935280548352600190810154838501528e86529390925292918290611e209086906127d0565b81526020019081526020016000206040518060400160405290816000820154815260200160018201548152505090506000611e5f8d8460000151611922565b5090506000611e728e8460000151611922565b509050670de0b6b3a7640000611e8883836127b9565b8560200151611e9791906127e8565b611ea19190612825565b611eab90876127d0565b955082600001519850505050508080611ec390612860565b915050611dd2565b50945091925050505b935093915050565b6001600160a01b0382166000908152600260209081526040808320546003909252822054600e5483929190611f145792509050611b3a565b6000611f1f8361098b565b90506000611f3b6001600e54611f3591906127b9565b88612012565b9050815b81811015612003576000818152600d60209081526040918290208251808401909352805483526001015490820181905215611ff0576000600d81611f848560016127d0565b8152602001908152602001600020604051806040016040529081600082015481526020016001820154815250509050600080611fcf8d8460000151866000015187602001518d6123e1565b9092509050611fde82896127d0565b9750611feb8d898361249c565b975050505b5080611ffb81612860565b915050611f3f565b50919792965091945050505050565b6000818310611b5157816109d1565b6000828152600c60205260409020544290801580159061206b57506000848152600b6020526040812083916120576001856127b9565b815260200190815260200160002060000154145b156120a4576000848152600b60205260408120849161208b6001856127b9565b81526020810191909152604001600020600101556120f4565b60408051808201825283815260208082018681526000888152600b83528481208682529092529290209051815590516001918201556120e49082906127d0565b6000858152600c60205260409020555b50505050565b600e5442811580159061212c575080600d60006121186001866127b9565b815260200190815260200160002060000154145b1561215b57600954600d60006121436001866127b9565b81526020810191909152604001600020600101555050565b60408051808201825282815260095460208083019182526000868152600d909152929092209051815590516001918201556121979083906127d0565b600e555050565b6000836001600160a01b03163b116121b557600080fd5b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb00000000000000000000000000000000000000000000000000000000179052915160009283929087169161223f9190612920565b6000604051808303816000865af19150503d806000811461227c576040519150601f19603f3d011682016040523d82523d6000602084013e612281565b606091505b50915091508180156122ab5750805115806122ab5750808060200190518101906122ab91906128fe565b6122b457600080fd5b5050505050565b6000846001600160a01b03163b116122d257600080fd5b604080516001600160a01b0385811660248301528481166044830152606480830185905283518084039091018152608490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f23b872dd0000000000000000000000000000000000000000000000000000000017905291516000928392908816916123649190612920565b6000604051808303816000865af19150503d80600081146123a1576040519150601f19603f3d011682016040523d82523d6000602084013e6123a6565b606091505b50915091508180156123d05750805115806123d05750808060200190518101906123d091906128fe565b6123d957600080fd5b505050505050565b60008060006123f08785611b41565b6001600160a01b0389166000908152602081905260409020549091508590670de0b6b3a7640000906124436124258a89611b41565b6001600160a01b038d16600090815260016020526040902054612012565b6001600160a01b038c16600090815260016020526040902054612467908690612012565b61247191906127b9565b61247b91906127e8565b61248591906127e8565b61248f9190612825565b9890975095505050505050565b6001600160a01b03831660009081526010602052604090205480158015906124f857506001600160a01b0384166000908152600f6020526040812083916124e46001856127b9565b815260200190815260200160002060000154145b15612522576001600160a01b0384166000908152600f60205260408120849161208b6001856127b9565b60408051808201825283815260208082018681526001600160a01b0388166000908152600f835284812086825290925292902090518155905160019182015561256c9082906127d0565b6001600160a01b03851660009081526010602052604090205550505050565b6001600160a01b03811681146125a057600080fd5b50565b80356125ae8161258b565b919050565b600080604083850312156125c657600080fd5b82356125d18161258b565b946020939093013593505050565b6000602082840312156125f157600080fd5b81356109d18161258b565b60008060006060848603121561261157600080fd5b833561261c8161258b565b95602085013595506040909401359392505050565b6000806040838503121561264457600080fd5b50508035926020909101359150565b60006020828403121561266557600080fd5b5035919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080604083850312156126ae57600080fd5b8235915060208084013567ffffffffffffffff808211156126ce57600080fd5b818601915086601f8301126126e257600080fd5b8135818111156126f4576126f461266c565b8060051b6040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0603f830116810181811085821117156127375761273761266c565b60405291825284820192508381018501918983111561275557600080fd5b938501935b8285101561277a5761276b856125a3565b8452938501939285019261275a565b8096505050505050509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000828210156127cb576127cb61278a565b500390565b600082198211156127e3576127e361278a565b500190565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156128205761282061278a565b500290565b60008261285b577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156128925761289261278a565b5060010190565b6000602082840312156128ab57600080fd5b81516109d18161258b565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000602082840312156128f757600080fd5b5051919050565b60006020828403121561291057600080fd5b815180151581146109d157600080fd5b6000825160005b818110156129415760208186018101518583015201612927565b81811115612950576000828501525b50919091019291505056fea2646970667358221220bc7eacad7edc17096140c0cc2279235be43eb155835795d0dc0d29f0534230db64736f6c634300080b0033";

type BribeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BribeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Bribe__factory extends ContractFactory {
  constructor(...args: BribeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Bribe";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Bribe> {
    return super.deploy(overrides || {}) as Promise<Bribe>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Bribe {
    return super.attach(address) as Bribe;
  }
  connect(signer: Signer): Bribe__factory {
    return super.connect(signer) as Bribe__factory;
  }
  static readonly contractName: "Bribe";
  public readonly contractName: "Bribe";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BribeInterface {
    return new utils.Interface(_abi) as BribeInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Bribe {
    return new Contract(address, _abi, signerOrProvider) as Bribe;
  }
}
