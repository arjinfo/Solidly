/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { VeTest, VeTestInterface } from "../VeTest";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "balanceOfNFT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "duration",
        type: "uint256",
      },
    ],
    name: "create_lock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "isApprovedOrOwner",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60c060405260008055600060035534801561001957600080fd5b506040516103f03803806103f08339810160408190526100389161004d565b6001600160a01b03166080523360a05261007d565b60006020828403121561005f57600080fd5b81516001600160a01b038116811461007657600080fd5b9392505050565b60805160a05161034e6100a2600039600061013901526000610175015261034e6000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c806365fc38731161005b57806365fc38731461011f5780638da5cb5b14610134578063e7e242d41461015b578063fc0c546a1461017057600080fd5b806318160ddd14610082578063430c20811461009e5780636352211e146100c4575b600080fd5b61008b60005481565b6040519081526020015b60405180910390f35b6100b46100ac366004610218565b600192915050565b6040519015158152602001610095565b6100fa6100d236600461025d565b60026020526000908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610095565b61013261012d366004610276565b610197565b005b6100fa7f000000000000000000000000000000000000000000000000000000000000000081565b61008b61016936600461025d565b5060005490565b6100fa7f000000000000000000000000000000000000000000000000000000000000000081565b81600160006003600081546101ab906102c7565b91829055508152602080820192909252604090810160009081209390935560035483526002909152812080547fffffffffffffffffffffffff000000000000000000000000000000000000000016331790558054839190819061020f908490610300565b90915550505050565b6000806040838503121561022b57600080fd5b823573ffffffffffffffffffffffffffffffffffffffff8116811461024f57600080fd5b946020939093013593505050565b60006020828403121561026f57600080fd5b5035919050565b6000806040838503121561028957600080fd5b50508035926020909101359150565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156102f9576102f9610298565b5060010190565b6000821982111561031357610313610298565b50019056fea264697066735822122011df78c13a15162e4369c084939f7759d094b2254bf038c0418d2b31ae9390cc64736f6c634300080b0033";

type VeTestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VeTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class VeTest__factory extends ContractFactory {
  constructor(...args: VeTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "VeTest";
  }

  deploy(
    _token: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<VeTest> {
    return super.deploy(_token, overrides || {}) as Promise<VeTest>;
  }
  getDeployTransaction(
    _token: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_token, overrides || {});
  }
  attach(address: string): VeTest {
    return super.attach(address) as VeTest;
  }
  connect(signer: Signer): VeTest__factory {
    return super.connect(signer) as VeTest__factory;
  }
  static readonly contractName: "VeTest";
  public readonly contractName: "VeTest";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VeTestInterface {
    return new utils.Interface(_abi) as VeTestInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): VeTest {
    return new Contract(address, _abi, signerOrProvider) as VeTest;
  }
}
